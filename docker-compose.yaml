version: "3.8"

services:
  proxy:
    image: traefik:v2.5
    ports:
      - ${APP_PORT}:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik-public
    command:
      # - --log.level=DEBUG
      # Traefik will listen on port 8080 by default for API request.
      # - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.${COMPOSE_PROJECT_NAME}_http.address=:80
      # Enable the access log, with HTTP requests
      - --accesslog
      # Enable the Traefik log, for configurations and errors
      - --log
      # Enable the Dashboard and API
      # - --api
    labels:
      - traefik.enable=true
      # Defines a default docker network to use for connections to all containers.
      - traefik.docker.network=${COMPOSE_PROJECT_NAME}_traefik-public
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}_proxy.entrypoints=${COMPOSE_PROJECT_NAME}_http
      - traefik.http.services.${COMPOSE_PROJECT_NAME}_proxy.loadbalancer.server.port=80
    restart: unless-stopped

  rtsp-simple-server:
    image: aler9/rtsp-simple-server:v0.21.4
    expose:
      - 8554
      - 1935
      - 8888
      - 9997
    environment:
      - RTSP_PROTOCOLS=tcp
    volumes:
      - ./rtsp-simple-server/rtsp-simple-server.yml:/rtsp-simple-server.yml
    networks:
      - traefik-public
    labels:
      - traefik.enable=true
      - traefik.docker.network=${COMPOSE_PROJECT_NAME}_traefik-public
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}_rtspsimpleserver.rule=PathPrefix(`/`)
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}_rtspsimpleserver.entrypoints=${COMPOSE_PROJECT_NAME}_http
      - traefik.http.services.${COMPOSE_PROJECT_NAME}_rtspsimpleserver.loadbalancer.server.port=8888
    restart: unless-stopped

  nginx:
    build:
      context: frontend
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - traefik-public
    expose:
      - 80
    labels:
      - traefik.enable=true
      - traefik.docker.network=${COMPOSE_PROJECT_NAME}_traefik-public
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}_frontend.rule=PathPrefix(`/web`)
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}_frontend.entrypoints=${COMPOSE_PROJECT_NAME}_http
      - traefik.http.services.${COMPOSE_PROJECT_NAME}_frontend.loadbalancer.server.port=80
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}_frontend.middlewares=${COMPOSE_PROJECT_NAME}_frontend
      - traefik.http.middlewares.${COMPOSE_PROJECT_NAME}_frontend.stripprefix.prefixes=/web
      - traefik.http.middlewares.${COMPOSE_PROJECT_NAME}_frontend.stripprefix.forceSlash=false
    restart: unless-stopped

networks:
  traefik-public:
